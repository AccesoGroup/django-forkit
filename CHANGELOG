2011-10-04  Byron Ruth  <ruthb@email.chop.edu>

	* API Refactor. Public methods including `fork', `reset', `diff', and
	`commit' have been defined as standalone functions. This refactor
	emphasizes greater coverage of applicability for all existing models
	rather than only those that inherit from `ForkableModel'. `ForkableModel'
	still contains the public methods for backwards compatibility and
	convenience.

2011-09-09  Byron Ruth  <ruthb@email.chop.edu>

	* Reset Method. Added `reset' method which requires a model instance
	`target' that enables "resetting" an existing object rather than creating
	a new object per `fork'.

2011-09-09  Byron Ruth  <ruthb@email.chop.edu>

	* Forking. Implemented an abstract model class `ForkableModel' which
	supports shallow and deep forking model instances.
	
	* Deferred Commits. All relationships are deferred from being saved until
	the whole hierarchy has been traversed during forking. Forks are not
	committed by default to ensure integrity errors are not forced.

	* Diffs. `ForkableModel' also implements a `diff' method for instances
	that can be used to compare data values against another object of the same
	type.

	* Limitations. `through' models for many-to-many fields are not yet
	supported. Deep diffs are not yet supported.
